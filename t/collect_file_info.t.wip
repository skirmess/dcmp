#!perl

use 5.006;
use strict;
use warnings;
use autodie;

use Test::Fatal;
use Test::More 0.88;
use Test::TempDir::Tiny;

use Fcntl ':mode';

use lib qw(.);

main();

sub main {
    require_ok('bin/dcmp') or BAIL_OUT();

    my $tmpdir = tempdir();
    chdir $tmpdir;

    open my $fh, '>', 'file.txt';
    print $fh "hello world\n";
    close $fh;
    my $file_size = -s 'file.txt';

    symlink 'file.txt', 'valid_link.txt';
    symlink 'invalid_target.txt', 'invalid_link.txt';

    mkdir 'dir';

    like(exception { App::dcmp::_collect_file_info('invalid_file') }, qr{ ^ \QCannot stat file invalid_file in $tmpdir: \E }xsm, '_collect_file_info throws an exception if lstat failes');

    #
    note('dir');
    my $file_info = App::dcmp::_collect_file_info('dir');
    is(ref $file_info, ref [], '_collect_file_info() returns am array ref');
    is(scalar @{ $file_info}, 2, '... consisting of two values');
    is(${$file_info}[0], 'dir', '... the file name');
    like(${$file_info}[1], qr{ ^ [0-9]+ $ }xsm, '... the mode');
    ok(S_ISDIR(${$file_info}[1]), '... which is from a directory');

    #
    note('file.txt');
    $file_info = App::dcmp::_collect_file_info('file.txt');
    is(ref $file_info, ref [], '_collect_file_info() returns am array ref');
    is(scalar @{ $file_info}, 3, '... consisting of three values');
    is(${$file_info}[0], 'file.txt', '... the file name');
    like(${$file_info}[1], qr{ ^ [0-9]+ $ }xsm, '... the mode');
    ok(S_ISREG(${$file_info}[1]), '... which is from a file');
    is(${$file_info}[2], $file_size, '... the file size');

    #
    note('valid_link.txt');
    $file_info = App::dcmp::_collect_file_info('valid_link.txt');
    is(ref $file_info, ref [], '_collect_file_info() returns am array ref');
    is(scalar @{ $file_info}, 3, '... consisting of three values');
    is(${$file_info}[0], 'valid_link.txt', '... the file name');
    like(${$file_info}[1], qr{ ^ [0-9]+ $ }xsm, '... the mode');
    ok(S_ISLNK(${$file_info}[1]), '... which is from a symlink');
    is(${$file_info}[2], 'file.txt', '... the links valid target');

    #
    note('invalid_link.txt');
    $file_info = App::dcmp::_collect_file_info('invalid_link.txt');
    is(ref $file_info, ref [], '_collect_file_info() returns am array ref');
    is(scalar @{ $file_info}, 3, '... consisting of three values');
    is(${$file_info}[0], 'invalid_link.txt', '... the file name');
    like(${$file_info}[1], qr{ ^ [0-9]+ $ }xsm, '... the mode');
    ok(S_ISLNK(${$file_info}[1]), '... which is from a symlink');
    is(${$file_info}[2], 'invalid_target.txt', '... the links invalid target');

    #
    done_testing();

    exit 0;
}

# vim: ts=4 sts=4 sw=4 et: syntax=perl
